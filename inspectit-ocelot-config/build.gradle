plugins {
    id 'maven-publish'
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

repositories {
    mavenLocal()
}

group = 'rocks.inspectit.ocelot'
sourceCompatibility = 1.8 // Java version compatibility to use when compiling Java source.
targetCompatibility = 1.8 // Java version to generate classes for.
dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation (
            "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}",
            "org.mockito:mockito-junit-jupiter:${mockitoVersion}",
            'org.assertj:assertj-core:3.11.1'
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}'

    implementation(
            platform("com.fasterxml.jackson:jackson-bom:${jacksonBomVersion}"),
            "org.springframework.boot:spring-boot:${springBootVersion}",
            'org.hibernate.validator:hibernate-validator:6.0.13.Final',
            "org.apache.commons:commons-lang3:${commonsLangVersion}",
            "commons-io:commons-io:${commonsIoVersion}",
            "com.fasterxml.jackson.core:jackson-databind",

            // logging
            "ch.qos.logback:logback-classic:${logbackVersion}",
    )

    // the api is included as compile only because the open census api has to be decoupled
    // from the inspectIT core to allow it to be pushed to the bootstrap
    compileOnly (
            "io.opencensus:opencensus-api:${openCensusVersion}",
            // OpenTelemetry
            platform("io.opentelemetry:opentelemetry-bom:${openTelemetryVersion}"),
            "io.opentelemetry:opentelemetry-sdk-metrics",
    )
}
