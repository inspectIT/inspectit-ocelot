import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'maven-publish'
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version "${springDependencyManangementVersion}"
    // TODO
    id 'idea'
    id 'com.google.protobuf' version '0.8.18'
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.2"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.45.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

group = 'rocks.inspectit.ocelot'
sourceCompatibility = 1.8 // Java version compatibility to use when compiling Java source.
targetCompatibility = 1.8 // Java version to generate classes for.
dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}
dependencies {
    compileOnly "org.projectlombok:lombok"
    // TODO verify that
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    annotationProcessor "org.projectlombok:lombok"
    testImplementation (
            "org.junit.jupiter:junit-jupiter-api",
            "org.mockito:mockito-junit-jupiter",
            "org.assertj:assertj-core"
    )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    implementation(
            "org.springframework.boot:spring-boot",
            "org.hibernate.validator:hibernate-validator",
            "org.apache.commons:commons-lang3",
            "commons-io:commons-io:${commonsIoVersion}",
            "com.fasterxml.jackson.core:jackson-databind",

            // grpc TODO
            'io.grpc:grpc-stub:1.45.0',
            'io.grpc:grpc-protobuf:1.45.0',

            // logging
            "ch.qos.logback:logback-classic",
    )

    // the api is included as compile only because the open census api has to be decoupled
    // from the inspectIT core to allow it to be pushed to the bootstrap
    compileOnly (
            "io.opencensus:opencensus-api:${openCensusVersion}",
            // OpenTelemetry
            platform("io.opentelemetry:opentelemetry-bom:${openTelemetryVersion}"),
            "io.opentelemetry:opentelemetry-sdk-metrics",
    )
}
