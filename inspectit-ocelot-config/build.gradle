import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'maven-publish'
    alias(libs.plugins.orgSpringframeworkBoot) apply false
    alias(libs.plugins.ioSpringDependencyManagement)
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

group = 'rocks.inspectit.ocelot'

java {
    sourceCompatibility = 1.8 // Java version compatibility to use when compiling Java source.
    targetCompatibility = 1.8 // Java version to generate classes for.
}

dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}

dependencies {
    compileOnly libs.orgProjectlombokLombok
    annotationProcessor libs.orgProjectlombokLombok
    testImplementation (
            libs.orgJunitJupiterJunitJupiterApi,
            libs.orgMockitoMockitoJunitJupiter,
            libs.orgAssertjAssertjCore
    )
    testRuntimeOnly libs.orgJunitJupiterJunitJupiterEngine

    implementation(
            libs.orgSpringframeworkBootSpringBoot,
            libs.orgHibernateValidatorHibernateValidator,
            libs.orgApacheCommonsCommonsLang3,
            libs.commonsIo,
            libs.comFasterxmlJacksonCoreJacksonDatabind,
            // logging
            libs.chQosLogbackLogbackClassic,
    )

    // the api is included as compile only because the open census api has to be decoupled
    // from the inspectIT core to allow it to be pushed to the bootstrap
    compileOnly (
            libs.ioOpencensusOpencensusApi,
            // OpenTelemetry
            platform(libs.ioOpentelemetryOpentelemetryBom),
            libs.ioOpentelemetryOpentelemetrySdkMetrics,
    )
}
