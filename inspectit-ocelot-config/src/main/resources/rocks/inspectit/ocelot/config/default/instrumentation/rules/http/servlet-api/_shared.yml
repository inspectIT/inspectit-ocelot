# ----------------------------------------------------------------------------------------
# All rules are designed to be applied on the Servlet.service or Filter.doFilter methods
# ----------------------------------------------------------------------------------------
inspectit:
  instrumentation:
    rules:

      'r_servletapi_detect_entry':
        docs:
          since: '1.2.1'
          description: 'Marks the first service() or doFilter() call as entry in case the ServletRequest is an HTTPServletRequest.'
        default-rule: true
        pre-entry:
          'is_http_servlet':
            action: 'a_servletrequest_isHttp'
            data-input:
              'request': _arg0
          'http_is_entry':
            action: 'a_entrypoint_check'
            constant-input: 
              'marker': 'http_server_entrypoint_marker'
            only-if-true: 'is_http_servlet'

      'r_servletapi_extract_details':
        docs:
          since: '1.2.1'
          description: 'Extracts all http details, such as http_path, http_method, http_status, etc. from HTTPServletRequests.'
        default-rule: true
        include:
          'r_servletapi_detect_entry': true
          'r_http_parametrize_path': true # Used to derive http_path from http_raw_path
        entry:
          'http_raw_path':
            only-if-true: 'http_is_entry'
            action: 'a_httpservletrequest_getPath'
            data-input:
              'request': _arg0
          'http_method':
            only-if-true: 'http_is_entry'
            action: 'a_httpservletrequest_getMethod'
            data-input:
              'request': _arg0
        exit:
          'http_status':
            only-if-true: 'http_is_entry'
            action: 'a_httpservletresponse_getStatus'
            data-input:
              'response': _arg1
          'http_is_error':
            only-if-true: 'http_is_entry'
            action: 'a_http_isErrorStatus'
            data-input:
              'status': 'http_status'
            
            
            
            
