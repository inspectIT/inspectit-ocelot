inspectit:
  instrumentation:
    actions:

      'a_jdbc_getUrl':
        docs:
          since: '1.2.1'
          description: 'Extracts the name of the JDBC connection for a given Statement.'
          inputs:
            'statement': 'The given Statement'
          return-value: 'The name as a String or null if the connection is closed.'
        imports:
          - 'java.sql'
        input:
          'statement': 'Statement'
        value-body: |
          try {
            Connection con = statement.getConnection();
            String url = con.getMetaData().getURL();
          
            int semiColonIndex = url.indexOf(';');
            if (semiColonIndex != -1) {
              url = url.substring(0, semiColonIndex);
            }
          
            int questionIndex = url.indexOf('?');
            if (questionIndex != -1) {
              url = url.substring(0, questionIndex);
            }
            if (url.toLowerCase().startsWith("jdbc:")) {
              url = url.substring(5);
            }
            return url;
          } catch (Exception e) { // in case the connection is closed
            return null;
          }
    
      'a_jdbc_extract_sql_command':
        docs:
          description: |-
            Extracts the command (e.g., SELECT, UPDATE, CALL, ...) from a SQL query.
            The used heuristic takes everything before the first blank.
          inputs:
            'sql_query': 'A string containing the SQL query from which the command will be extracted.'
          return-value: 'The SQL command as string.'
        input:
          'statement': 'String'
        value-body: |
          String statementTrimmed = statement.trim();
          int index = statementTrimmed.indexOf(' ');
          if (index > -1) {
              return statementTrimmed.substring(0, index).trim();
          } else {
              return statementTrimmed;
          }
