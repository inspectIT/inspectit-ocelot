inspectit:

  # the name of the service which is being instrumented
  service-name: "InspectIT Agent"

  # defines common tags to be be set on the metrics
  tags:
    # different tag providers that can be configured
    providers:
      # environment provider adds 'service-name', 'host' and 'host-address' tags
      environment:
        # if environment provider is enabled
        enabled: true
        # should the host name be resolved using InetAddress.getLocalHost(), if false 'host' tag is not added by env provider
        resolve-host-name: true
        # should the host address be resolved using InetAddress.getLocalHost(), if false 'host-address' tag is not added by env provider
        resolve-host-address: true
    # specifies user defined tag keys and values as a map
    # these tag values would overwrite any value added by the providers, thus you can easily overwrite tags values by your own
    extra: { }

  # general settings regarding trace capturing
  tracing:
    # master switch for trace capturing. When set to false the following happens:
    #  - all trace exporters are disabled
    #  - tracing is disabled for all instrumentation rules
    enabled: true
    # global sample probability used to decide if a trace shall be sampled or not
    # this value can be overridden by the tracing settings of individual instrumentation rules.
    sample-probability: 1.0
    # global default sample mode used to decide if a trace shall be sampled or not. Can either be 'PARENT_BASED', 'TRACE_ID_RATIO_BASED' or 'HYBRID_PARENT_TRACE_ID_RATIO_BASED'
    sample-mode: PARENT_BASED
    # the format for propagating correlation headers.
    # options are: B3, TRACE_CONTEXT, DATADOG
    propagation-format: B3
    # defines when to add common tags as attributes to spans
    # options are: NEVER, ON_GLOBAL_ROOT, ON_LOCAL_ROOT, ALWAYS
    add-common-tags: ON_LOCAL_ROOT
    # settings regarding automatic tracing (stack-trace-sampling)
    auto-tracing:
      frequency: 50ms
      shutdown-delay: 30s
    # whether the agent should use 64 bit trace ids instead of 128 bit trace ids
    use-64-bit-trace-ids: false
    # settings regarding log correlation
    log-correlation:
      trace-id-mdc-injection:
        # whether existing trace ids should be injected into the logging framework's MDC
        enabled: false
        # the key which is used to store the trace id in the MDC
        key: "traceid"
        # Opt-out option for slf4J
        slf4j-enabled: true
        # Opt-out option for Log4J1
        log4j1-enabled: true
        # Opt-out option for Log4J2
        log4j2-enabled: true
        # Opt-out option for JBoss Logmanager
        jboss-logmanager-enabled: true
      trace-id-auto-injection:
        # whether the trace id should automatically injected into log statements
        enabled: false
        # the prefix to use when injecting a trace id
        prefix: "[TraceID: "
        # the suffix to use when injecting a trace id
        suffix: "]"
    # the maximum batch size for every span export, i.e., the maximum number of spans exported by the used BatchSpanProcessor
    max-export-batch-size: 512
    # the delay interval between two consecutive exports in milliseconds.
    schedule-delay-millis: 5000

  # general settings regarding metrics capturing
  metrics:
    # master switch for metrics capturing. When set to false the following happens:
    #  - all metrics exporters are disabled
    #  - all metrics recorders are disabled
    #  - no measurement values are collected via instrumentation, however the instrumentation is still performed
    #  - no views and measures are created
    enabled: true

  # logging settings
  logging:
    # path to a custom user-specified logback config file that should be used
    config-file:
    # properties below only work if the default inspectIT Ocelot logback config file is used
    # sets the inspectIT Ocelot log level to TRACE
    trace: false
    # sets the level to DEBUG (only if trace is false)
    debug: false
    # settings for the console output
    console:
      # defines if the console output is enabled
      enabled: true
      # defines a custom pattern to output to the console
      pattern:
    # settings for the file-based log output
    # inspectIT Ocelot will create two log files: agent.log and exceptions.log
    file:
      # defines if the file-based log output is enabled
      enabled: true
      # defines a custom pattern to output to the console
      pattern:
      # defines a custom path where log files should be placed (defaults to /tmp/inspectit-oce)
      path:
      # if the default pattern should include the service name (specified with inspectit.service-name)
      # helpful when you run more than one service on the same host
      include-service-name: true

  # defines how many threads inspectIT may start for its internal tasks
  thread-pool-size: 2

  # settings for the agent commands and communication
  agent-commands:
    # whether agent commands are enabled or not
    enabled: false
    # whether the agent commands URL should be derived from the HTTP configuration URL. If true, has priority over host.
    derive-host-from-http-config-url: false
    # the host for fetching agent commands over grpc - e.g.: localhost
    host:
    # Port the agent will use to connect to the config-server over grpc, should correspond to grpc.server.port in config-server's properties.
    port: 9657
    # Whether TLS should be used for grpc connection.
    use-tls: true
    # Path to a collection of trusted certificates, needed for TLS for agent commands if server's certificate does not chain to a standard root.
    trust-cert-collection-file-path:
    # If the server's certificate is not valid for the hostname the agent uses to connect itself,
    # this option can be used to add that name to fix the problem
    authority-override:
    # Path to certificate file for client, i.e. agent, needed only for mutual authentication.
    client-cert-chain-file-path:
    # Path to private key file for client, i.e. agent, needed only for mutual authentication.
    client-private-key-file-path:
    # maximum size for inbound grpc messages, i.e. commands from config-server, in MiB. Default is 4MiB.
    max-inbound-message-size: 4
    # Time after which the backoff between retries to re-establish the grpc connection between agent and config-server
    # is reset to the lowest value in seconds.
    backoff-reset-time: 60s
    # How often the backoff between retries to re-establish the grpc connection between agent and config-server is increased for the next retry.
    # Backoff is calculated as 2 to the power of how often the backoff has been increased plus 1, so a value of 4 means that the max backoff is 32 seconds.
    #
    # This setting only sets a maximum for the backoff between retries, it does not affect the number of retries,
    # the service will always continue to try reconnecting on errors unless disabled.
    max-backoff-increases: 4

  log-preloading:
    enabled: false
    log-level: WARN
    buffer-size: 128
