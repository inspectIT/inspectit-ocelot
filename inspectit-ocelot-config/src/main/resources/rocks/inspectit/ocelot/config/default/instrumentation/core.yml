inspectit:
  # settings regarding the instrumentation performed on the target application
  instrumentation:
    # Master switch for the instrumentation. Defines whether the agent is instrumenting classes. In case this is
    # disabled, classes will not be instrumented, thus, any tracing and metric recording will NOT be possible.
    # Only the instrumentation is affected by this flag.
    # If this is set to false, it has the same effect as if no rules were defined.
    enabled: true

    # settings for special sensors
    special:
      # enables or disables the instrumentation to ensure context propagation across java.util.concurrent.Executor instances
      executor-context-propagation: true
      # enables or disables the instrumentation for context propagation via java.util.concurrent.ScheduledExecutorService
      scheduled-executor-context-propagation: true
      # enables or disables the instrumentation to ensure context propagation across java.lang.Thread instances
      thread-start-context-propagation: true

      # If true, we instrument all class loaders which contain instrumented classes to make sure our bootstrap classes are reachable.
      # This ensures that in custom module systems such as OSGi our instrumentation works without the need for configuration changes.
      class-loader-delegation: true

    # settings for fine-tuning the instrumentation process
    internal:
      # the time to pause between executing batches of class instrumentation updates
      inter-batch-delay: 50ms
      # defines how many classes are checked at once for updates of their configuration
      class-configuration-check-batch-size: 1000
      # defines the maximum number of classes which are retransformed at once per batch
      class-retransform-batch-size: 10

      # defines how often the agent should check if new classes have been defined.
      # this check is only performed if Classloader.defineClass was called less than ${max-class-definitions-delay} seconds ago
      new-class-discovery-interval: 10s
      # defines how often after the last invocation of a ClassFileTransformer the agent scans for new classes
      num-class-discovery-trials: 2

      # "Actions" are defined by injecting classes into existing classloaders.
      # When a security manager is enabled, it is important that these classes have a ProtectionDomain configured.
      # Depending on the security needs, this can be either the PD of inspectit or of a neighbor-class in the Classloader.
      use-inspectit-protection-domain: true

      # defines whether orphan action classes are recycled or new classes should be injected instead
      recycling-old-action-classes: true

    data:
      # used for storing a received remote span id
      remote_parent_span_context:
        down-propagation: JVM_LOCAL