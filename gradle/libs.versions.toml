[versions]
# versions 1.32.* break tests
comLinecorpArmeria = "1.31.3"
# @pin 1.3.* are the latest versions, which support java 8
chQosLogback= "1.3.15"
ioGithubNetmikeyLogunit = "2.0.0"
ioGrpc = "1.72.0"
# Ensure to adapt the netty version when changing the OpenCensus version
ioOpencensus = "0.31.1"
# If you rename this OTel variable or move it to another file, adjust the release-workflow
ioOpentelemetry = "1.50.0"
ioOpentelemetryAlpha = "1.50.0-alpha"
ioOpentelemetryProto = "1.5.0-alpha"
ioOpentelemetrySemconv = "1.32.0"
orgApacheLoggingLog4j = "2.24.3"
# @pin 10+ does not support Java 8 - Maintain latest 9 version
orgEclipseJetty = "9.4.57.v20241219"
# @pin Starting with version 6.x requires Java 11
# 5.10.* is not running
orgJunitJupiter = "5.9.3"
# @pin mockito 5 requires Java 11
orgMockito = "4.11.0"
# use version, which logback is using
orgSlf4j = "2.0.7"
# @pin 5.3.* is the last version to support Java 8
orgSpringframework = "5.3.39"
# @pin 2.7.18 is the latest release which runs on Java 8, this version marks the end of open source support for SB 2.x
orgSpringframeworkBoot = "2.7.18"
orgTestcontainers = "1.21.0"
# @pin resilience4j 2.* uses Java 17 APIs
ioGithubResilience4j = "1.7.1"

[libraries]
chQosLogbackLogbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "chQosLogback" }
chQosLogbackLogbackCore = { module = "ch.qos.logback:logback-core", version.ref = "chQosLogback" }
# @pin 2.13.5 since this version is used by Spring Boot 2.7.18
comFasterxmlJacksonCoreJacksonDatabind = "com.fasterxml.jackson.core:jackson-databind:2.13.5"
# @pin Wiremock 3.* doesn't support java 8
comGithubTomakehurstWiremockJre8 = "com.github.tomakehurst:wiremock-jre8:2.35.2"
comGoogleGuava = { module = "com.google.guava:guava", version = { strictly = "33.4.8-jre" } }
# @pin protobuf 4.* is not running
# Note: 3.25.6 breaks tests
comGoogleProtobufProtobufJavaUtil = "com.google.protobuf:protobuf-java-util:3.25.5"
# Note: Updating to 2.3.* will break jmh tests
comH2databaseH2 = "com.h2database:h2:2.2.224"
comLinecorpArmeriaArmeriaGrpcProtocol = { module = "com.linecorp.armeria:armeria-grpc-protocol", version.ref = "comLinecorpArmeria" }
comLinecorpArmeriaArmeriaJunit5 = { module = "com.linecorp.armeria:armeria-junit5", version.ref = "comLinecorpArmeria" }
comSquareupOkio = "com.squareup.okio:okio:3.11.0"
commonsIo = "commons-io:commons-io:2.19.0"
ioGithubNetmikeyLogunitLogunitCore = { module = "io.github.netmikey.logunit:logunit-core", version.ref = "ioGithubNetmikeyLogunit" }
ioGithubNetmikeyLogunitLogunitLogback = { module = "io.github.netmikey.logunit:logunit-logback", version.ref = "ioGithubNetmikeyLogunit" }
ioGithubResilience4jResilience4jRetry = { module = "io.github.resilience4j:resilience4j-retry", version.ref = "ioGithubResilience4j" }
ioGithubResilience4jResilience4jTimelimiter = { module = "io.github.resilience4j:resilience4j-timelimiter", version.ref = "ioGithubResilience4j" }
ioGrpcGrpcNettyShaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "ioGrpc" }
ioGrpcGrpcStub = { module = "io.grpc:grpc-stub", version.ref = "ioGrpc" }
# The following dependency is required for the OC-exporter to work correctly and must be matched against the grpc version
# See https://github.com/census-instrumentation/opencensus-java/blob/master/exporters/trace/ocagent/README.md
ioNettyNettyTcnativeBoringsslStatic = "io.netty:netty-tcnative-boringssl-static:2.0.71.Final"
# Ensure to adapt the netty version when changing the OpenCensus version
ioOpencensusOpencensusApi = { module = "io.opencensus:opencensus-api", version.ref = "ioOpencensus" }
ioOpencensusOpencensusImpl = { module = "io.opencensus:opencensus-impl", version.ref = "ioOpencensus" }
ioOpencensusOpencensusTesting = { module = "io.opencensus:opencensus-testing", version.ref = "ioOpencensus" }
ioOpentelemetryOpentelemetryApi = { module = "io.opentelemetry:opentelemetry-api", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetryBom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetryBomAlpha = { module = "io.opentelemetry:opentelemetry-bom-alpha", version.ref = "ioOpentelemetryAlpha" }
ioOpentelemetryOpentelemetryExporterLogging = { module = "io.opentelemetry:opentelemetry-exporter-logging", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetryExporterOtlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetryExporterPrometheus = { module = "io.opentelemetry:opentelemetry-exporter-prometheus", version.ref = "ioOpentelemetryAlpha" }
ioOpentelemetryOpentelemetryExporterZipkin = { module = "io.opentelemetry:opentelemetry-exporter-zipkin", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetryOpencensusShim = { module = "io.opentelemetry:opentelemetry-opencensus-shim", version.ref = "ioOpentelemetryAlpha" }
ioOpentelemetryOpentelemetryProto = { module = "io.opentelemetry.proto:opentelemetry-proto", version.ref = "ioOpentelemetryProto" }
ioOpentelemetryOpentelemetrySdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetrySdkMetrics = { module = "io.opentelemetry:opentelemetry-sdk-metrics", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetrySdkTesting = { module = "io.opentelemetry:opentelemetry-sdk-testing", version.ref = "ioOpentelemetry" }
ioOpentelemetryOpentelemetrySemconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version.ref = "ioOpentelemetrySemconv" }
ioPrometheusSimpleclientHttpserver = "io.prometheus:simpleclient_httpserver:0.16.0"
javaxAnnotationJavaxAnnotationApi = "javax.annotation:javax.annotation-api:1.3.2"
log4j = "log4j:log4j:1.2.17"
netBytebuddyByteBuddy = "net.bytebuddy:byte-buddy:1.17.5"
# @pin logback 7.* is the last version for Java 8
netLogstashLogbackLogstashLogbackEncoder = "net.logstash.logback:logstash-logback-encoder:7.4"
orgApacheCommonsCommonsLang3 = "org.apache.commons:commons-lang3:3.17.0"
orgApacheCommonsCommonsMath3 = "org.apache.commons:commons-math3:3.6.1"
orgApacheHttpcomponentsHttpclient = "org.apache.httpcomponents:httpclient:4.5.14"
orgApacheLoggingLog4jLog4jApi = { module = "org.apache.logging.log4j:log4j-api", version.ref = "orgApacheLoggingLog4j" }
orgApacheLoggingLog4jLog4jCore = { module = "org.apache.logging.log4j:log4j-core", version.ref = "orgApacheLoggingLog4j" }
# @pin Tomcat 9.0.* is the last version to support java 8
orgApacheTomcatEmbedTomcatEmbedEl = "org.apache.tomcat.embed:tomcat-embed-el:9.0.105"
orgAssertjAssertjCore = "org.assertj:assertj-core:3.27.3"
orgAssertjAssertjGuava = "org.assertj:assertj-guava:3.27.3"
orgAwaitility = "org.awaitility:awaitility:4.3.0"
# @pin Jetty 9.4.* is the last version to support java 8
orgEclipseJettyJettyServer = { module = "org.eclipse.jetty:jetty-server", version.ref = "orgEclipseJetty" }
# @pin HibernateValidator 6.* is the last version to support java 8
orgHibernateValidatorHibernateValidator = "org.hibernate.validator:hibernate-validator:6.2.5.Final"
orgInfluxdbInfluxdbJava = "org.influxdb:influxdb-java:2.25"
orgJavassist = "org.javassist:javassist:3.30.2-GA"
orgJunitJupiterJunitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "orgJunitJupiter" }
orgJunitJupiterJunitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "orgJunitJupiter" }
orgMockitoMockitoCore = { module = "org.mockito:mockito-core", version.ref = "orgMockito" }
orgMockitoMockitoJunitJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "orgMockito" }
orgProjectlombokLombok = "org.projectlombok:lombok:1.18.38"
orgSlf4jJulToSlf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "orgSlf4j" }
orgSlf4jslf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "orgSlf4j" }
orgSpringdocSpringdocOpenapiUi = "org.springdoc:springdoc-openapi-ui:1.8.0"
orgSpringframeworkBootSpringBoot = { module = "org.springframework.boot:spring-boot", version.ref = "orgSpringframeworkBoot" }
orgSpringframeworkBootSpringBootTest = { module = "org.springframework.boot:spring-boot-test", version.ref = "orgSpringframeworkBoot" }
orgSpringframeworkSpringJcl = { module = "org.springframework:spring-jcl", version.ref = "orgSpringframework" }
orgSpringframeworkSpringTest = { module = "org.springframework:spring-test", version.ref = "orgSpringframework" }
orgTestcontainers = { module = "org.testcontainers:testcontainers", version.ref = "orgTestcontainers" }
orgTestcontainersJunitJupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "orgTestcontainers" }
# @pin Version 2.* is not working with the current jackson-dependency of spring 2
orgYamlSnakeyaml = "org.yaml:snakeyaml:1.33"
orgeclipseJettyJettyServlet = { module = "org.eclipse.jetty:jetty-servlet", version.ref = "orgEclipseJetty" }
# No updates available, necessary for our custom logging PiccoloSaxEventRecorder in inspectit-ocelot-core
piccolo = "piccolo:piccolo:1.0.3"
rocksInspectitOpencensusInfluxdbExporter = "rocks.inspectit:opencensus-influxdb-exporter:1.2"

[bundles]
opentelemetry = [
    "ioOpentelemetryOpentelemetryApi",
    "ioOpentelemetryOpentelemetryOpencensusShim",
    "ioOpentelemetryOpentelemetrySdk",
    "ioOpentelemetryOpentelemetrySdkMetrics",
]

[plugins]
comGithubBenManesVersions = "com.github.ben-manes.versions:0.52.0"
# @pin There is a newer version 2.1, but it is not Java 8 compatible
comGithubJk1DependencyLicenseReport = "com.github.jk1.dependency-license-report:2.0"
comGithubNodeGradleNode = "com.github.node-gradle.node:7.1.0"
# @pin There is a newer Version 0.35.0, but it is not Java 8 compatible
# For the Agent, this is currently provided via gradle.properties to make it dynamic.
comPalantirDocker = "com.palantir.docker:0.34.0"
ioSpringDependencyManagement = "io.spring.dependency-management:1.1.7"
meChampeauJmh = "me.champeau.jmh:0.7.3"
nlLittlerobotsVersionCatalogUpdate = "nl.littlerobots.version-catalog-update:0.8.5"
# version > 2.0 breaks gradle setup
orgCyclonedxBom = "org.cyclonedx.bom:2.0.0"
# @pin Dependency-Check 11.* requires Java 11, 10.0.4 does not work with Gradle 7
orgOwaspDependencycheck = "org.owasp.dependencycheck:10.0.3"
orgSpringframeworkBoot = { id = "org.springframework.boot", version.ref = "orgSpringframeworkBoot" }
