logging:
  level:
    # TODO remove this with next spring boot version (currently 3.1.6)
    org.springframework.web.servlet.handler.HandlerMappingIntrospector: error

spring:
  datasource:
    url: jdbc:sqlite:${inspectit-config-server.working-directory}/users.db
    driver-class-name: org.sqlite.JDBC
    username: ""
    password: ""

  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.community.dialect.SQLiteDialect
    hibernate:
      ddl-auto: validate

  flyway:
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    baselineOnMigrate: true
    baselineVersion: 1

# server properties - see https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#server-properties
server:
  port: 8090
  max-http-header-size: 1MB

inspectit-config-server:
  # the directory which is used as working directory
  working-directory: working_directory
  # source branch for agent mappings, which should be used during start up
  initial-agent-mappings-source-branch: WORKSPACE
  # the expiration duration of JWT tokens
  token-lifespan: 60m
  # the e-mail suffix used for internal users
  mail-suffix: '@inspectit.rocks'
  # the default admin user
  default-user:
    name: admin
    password: admin
  # size of the internal thread pool
  thread-pool-size: 4
  # the maximum number of active agents connected to this server
  # only used to limit the sizes of internal caches
  max-agents: 10000
  # If an agent didn't fetched its configuration for this duration, it is forgotten and evicted from all caches
  agent-eviction-delay: 1h

  # security settings
  security:
    # Whether LDAP authentication should be used
    # See the documentation on how to configure LDAP correctly: https://inspectit.github.io/inspectit-ocelot/docs/config-server/user-authentication
    ldap-authentication: false
    # If enabled, non-admin users cannot promote their own changes.
    # The writing of the configuration and the promotion needs to be done by two separate persons.
    four-eyes-promotion: false
    # If enabled, all authorized and unauthorized accesses attempts to secured endpoints will be logged.
    access-log: true
    ## Valid tokens which can be used to authorize calls against the '/api/v1/hooks/**' endpoints.
    # webhook-tokens:
    #  - 'your_hopefully_very_secure_token'

  # settings for the agent commands
  agent-command:
    # after this time, commands which have not been fetched will be removed
    command-timeout: 2m
    # timeout how long a command will wait for a response from the agent
    response-timeout: 30s
    # the size of each agents' command queue
    command-queue-size: 100
    # the max. time an agent is allowed to wait for a new command
    agent-polling-timeout: 30s

  # Settings for connecting the configuration server to remote Git repositories.
  remote-configurations:
    # Whether remote Git repositories should be used for configuration management.
    enabled: false
    # Whether the current live branch should be pushed during startup.
    push-at-startup: false
    # Whether the remote source branch should be fetched and merged into the current workspace branch during startup.
    pull-at-startup: false
    # Defines whether the configuration files of the configuration source repository should be pulled on the initial
    # configuration synchronization. The initial synchronization is not related to the 'pull-at-startup' property!
    # Read the documentation for detailed information on this property!
    initial-configuration-sync: false
    # Whether synchronized files should be promoted automatically, after they have been fetched from the
    # configuration remote.
    auto-promotion: true
    ## The remote Git repository which will be used to fetch workspace-configurations from.
    #pull-repository:
      ## The name of the remote ref in the local Git repository.
      #remote-name: pull-remote-configuration
      ## The URI to the remote Git repository. Examples: https://github.com/user/repo.git, ssh://git@github.com:user/repo.git
      #git-repository-uri:
      ## The branch name on the remote Git repository.
      #branch-name: remote-workspace
      ## The type of authentication to use. Possible values: NONE, PASSWORD, PPK
      #authentication-type: NONE
      ## The username for accessing the remote repository. Only used in case of PASSWORD authentication.
      #username:
      ## The password for accessing the remote repository. Only used in case of PASSWORD authentication.
      #password:
      ## Additional private key to use for SSH authentication. The server will automatically load the known hosts and private
      ## keys from the default locations (identity, id_rsa and id_dsa) in the user’s .ssh directory. Only used in case of
      ## PPK authentication.
      #private-key-file:
    ## The remote Git repository which will be used to push live-configurations to.
    #push-repository:
      ## The name of the remote ref in the local Git repository.
      #remote-name: push-remote-configuration
      ## The URI to the remote Git repository. Examples: https://github.com/user/repo.git, ssh://git@github.com:user/repo.git
      #git-repository-uri:
      ## The branch name on the remote Git repository.
      #branch-name: remote-live
      ## Whether force push should used for pushing to this remote.
      #use-force-push: true
      ## The type of authentication to use. Possible values: NONE, PASSWORD, PPK
      #authentication-type: NONE
      ## The username for accessing the remote repository. Only used in case of PASSWORD authentication.
      #username:
      ## The password for accessing the remote repository. Only used in case of PASSWORD authentication.
      #password:
      ## Additional private key to use for SSH authentication. The server will automatically load the known hosts and private
      ## keys from the default locations (identity, id_rsa and id_dsa) in the user’s .ssh directory. Only used in case of
      ## PPK authentication.
      #private-key-file:

# ACTUATOR PROPERTIES
management:
  # Whether to enable or disable all endpoints by default.
  endpoints.enabled-by-default: false
  endpoint:
    # Whether to enable the health endpoint.
    health.enabled: true
  # HEALTH INDICATORS
  health:
    # Whether to enable LDAP health check.
    ldap.enabled: ${inspectit-config-server.security.ldap-authentication}

# OpenAPI springdoc
springdoc:
  packages-to-scan: ["rocks.inspectit.ocelot.rest"]
  paths-to-match: "/**"
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha
