/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // spring dependency manager
    id 'org.springframework.boot' version "${springBootVersion}"
}
apply plugin: 'io.spring.dependency-management'
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(
            'org.junit.jupiter:junit-jupiter',
            "io.opencensus:opencensus-api:${openCensusVersion}",
            "io.opentelemetry:opentelemetry-api:${openTelemetryVersion}",

            'org.mockito:mockito-junit-jupiter',
            "org.assertj:assertj-core",
            'com.google.guava:guava:31.1-jre'
    )

    // This dependency is used by the application.
    implementation(
            project(':inspectit-ocelot-config'),
            "ch.qos.logback:logback-classic",
            "org.apache.commons:commons-lang3:${commonsLangVersion}",
            'commons-beanutils:commons-beanutils:1.9.4',

            "org.springframework.boot:spring-boot-starter-web",
            // override snakeyaml due to vulnerabilities in v1.29 used by the SpringBoot version used in this module
            "org.yaml:snakeyaml:${snakeYamlVersion}"
    )

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
}

application {
    // Define the main class for the application.
    mainClass = 'inspectit.ocelot.configuration.docs.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
//to guarantee that the Configuration Server is compatible with Java 8 runtime environments
sourceCompatibility = 1.8 // Java version compatibility to use when compiling Java source.
targetCompatibility = 1.8 // Java version to generate classes for.
