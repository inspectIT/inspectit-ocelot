inspectit-eum-server:

  definitions:
    page_ready_time:
      measure-type: LONG
      value-expression: "{t_page}"
      unit: ms
      views:
        '[page_ready_time/SUM]': {aggregation: SUM}
        '[page_ready_time/COUNT]': {aggregation: COUNT}

    load_time:
      measure-type: LONG
      value-expression: "{t_done}"
      beacon-requirements:
        - field: rt.quit
          requirement: NOT_EXISTS
      unit: ms
      views:
        '[load_time/SUM]': {aggregation: SUM}
        '[load_time/COUNT]': {aggregation: COUNT}

    calc_load_time:
      measure-type: LONG
      value-expression: "{rt.end} - {rt.tstart}"
      beacon-requirements:
        - field: rt.quit
          requirement: NOT_EXISTS
      unit: ms
      views:
        '[calc_load_time/SUM]': {aggregation: SUM}
        '[calc_load_time/COUNT]': {aggregation: COUNT}

    start_timestamp:
      measure-type: LONG
      value-expression: "{rt.tstart}"
      unit: ms

    navigation_start_timestamp:
      measure-type: LONG
      value-expression: "{rt.nstart}"
      unit: ms

    end_timestamp:
      measure-type: LONG
      value-expression: "{rt.end}"
      unit: ms
      views:
        end_timestamp:
          aggregation: LAST_VALUE
          tags: {APPLICATION: true}

  tags:
    extra:
      APPLICATION: my-application
    beacon:
      COUNTRY_CODE:
        input: COUNTRY_CODE
      URL:
        input: u
      OS:
        input: ua.plt
      U_NO_QUERY:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^([^?]*)(\\?.*)?$"
            replacement: "$1"
      U_HOST:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*).*$"
            replacement: "$1"
      U_PORT:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*):(\\d+).*$"
            replacement: "$2"
      U_PATH:
        input: u
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^\\/]*)([^?]*).*$"
            replacement: "$2"
      PGU_NO_QUERY:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^([^?]*)(\\?.*)?$"
            replacement: "$1"
      PGU_HOST:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*).*$"
            replacement: "$1"
      PGU_PORT:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^:\\/]*):(\\d+).*$"
            replacement: "$2"
      PGU_PATH:
        input: pgu
        replacements:
          - keep-no-match: false
            pattern: "^.*\\/\\/([^\\/]*)([^?]*).*$"
            replacement: "$2"
    define-as-global:
      - URL
      - OS
      - COUNTRY_CODE

  # metrics exporter settings
  exporters:
    metrics:
      prometheus:
        # Determines whether the prometheus exporter is enabled.
        enabled: true

        # The host of the prometheus HTTP endpoint.
        host: localhost

        # The port of the prometheus HTTP endpoint.
        port: 8888

      influx:
        # Determines whether the influx exporter is enabled.
        enabled: true

        # the export interval of the metrics.
        export-interval: 15s

        # The http url of influx.
        # If this property is not set, the influx-exporter will not be started.
        # url: "http://localhost:8086"

        # The database to write to.
        # If this property is not set, the influx-exporter will not be started.
        database: "inspectit"

        # The username to be used to connect to the influxDB.
        # username:

        # The password to be used to connect to the influxDB.
        # password:

        # The retention policy to write to.
        # If this property is not set, the influx-exporter will not be started.
        retention-policy: "autogen"

        # If true, the specified database will be created with the autogen retention policy.
        create-database: true

        # If disabled, the raw values of each counter will be written to the InfluxDB on each export.
        # When enabled, only the change of the counter in comparison to the previous export will be written.
        # This difference will only be written if the counter has changed (=the difference is non-zero).
        # This can greatly reduce the total data written to influx and makes writing queries easier.
        counters-as-differences: true

        # The size of the buffer for failed batches.
        # E.g. if the exportInterval is 15s and the buffer-size is 4, the export will keep up to one minute of data in memory.
        buffer-size: 40

    tracing:
      # Specifies whether client IP addresses which are added to spans should be masked.
      mask-span-ip-addresses: true

      jaeger:
        # If jaeger exporter for the OT received spans is enabled.
        enabled: true

        # Location of the jaeger gRPC API.
        # Either a valid NameResolver-compliant URI, or an authority string.
        # If this property is not set, the jaeger-exporter will not be started.
        # grpc: localhost:14250

        # service name for all exported spans.
        service-name: browser-js

    beacons:
      http:
        # Whether beacons should be exported via HTTP.
        enabled: false

        # The endpoint to which the beacons are to be sent.
        endpoint-url: http://localhost:8080

        # The max. amount of threads exporting beacons (min. 1).
        worker-threads: 2

        # The maximum number of beacons to be exported using a single HTTP request (min. 1).
        max-batch-size: 100

        # The flush interval to export beacons in case the 'max-batch-size' has not been reached (min. 1 second).
        flush-interval: 5s

        # When specified, the request will be using this username for Basic authentication.
        # username:

        # The password used for Basic authentication.
        # password:

  # settings for the EUM server's self-monitoring
  self-monitoring:

    # whether self-monitoring is enabled
    enabled: true

    # the prefix used for the self-monitoring metrics
    metricPrefix: "inspectit-eum/self/"

    # definitions of the self-monitoring metrics
    metrics:
      # counts the amount of received EUM beacons
      beacons_received:
        measure-type: LONG
        unit: amount
        views:
          '[inspectit-eum/self/beacons_received/count]':
            aggregation: COUNT
            tags:
              is_error: true

      beacons_export:
        measure-type: LONG
        unit: amount
        views:
          # the amount of beacon exports
          '[inspectit-eum/self/beacons_export/count]':
            aggregation: COUNT
            tags:
              exporter: true
              is_error: true
          # the export duration
          '[inspectit-eum/self/beacons_export/duration/sum]':
            aggregation: SUM
            tags:
              exporter: true
              is_error: true

      beacons_export_batch:
        measure-type: LONG
        unit: amount
        views:
          # the amount of elements in a single export execution
          '[inspectit-eum/self/beacons_export/batch/sum]':
            aggregation: SUM
            tags:
              exporter: true
              is_error: true

      beacons_processor:
        measure-type: LONG
        unit: amount
        views:
          # the amount of beacon processors
          '[inspectit-eum/self/beacons_processor/count]':
            aggregation: COUNT
            tags:
              beacon_processor: true
          # the export duration
          '[inspectit-eum/self/beacons_processor/duration/sum]':
            aggregation: SUM
            tags:
              beacon_processor: true

  # settings for exposing resource timing metrics
  resource-timing:
    enabled: true

# ACTUATOR PROPERTIES
management:
  # Whether to enable or disable all endpoints by default.
  endpoints.enabled-by-default: false
  endpoint:
    # Whether to enable the health endpoint.
    health.enabled: true
