version: '3'

services:
  #  Ocelot
  ## Serves as a collector for traces
  agent:
    image: inspectit/inspectit-ocelot-agent:${INSPECTIT_OCELOT_VERSION}
    container_name: agent
    deploy:
      resources:
        limits:
          memory: 128M
    volumes:
      - agent-vol:/agent

  ##  Fetches the configuration
  ocelot-config-server:
    image: inspectit/inspectit-ocelot-configurationserver:${INSPECTIT_OCELOT_VERSION}
    container_name: ocelot-config-server
    deploy:
      resources:
        limits:
          memory: 256M
    environment:
      - INSPECTIT_CONFIG_SERVER_WORKING_DIRECTORY=/configuration-server
      - INSPECTIT_CONFIG_SERVER_DEFAULT_USER_PASSWORD=demo
    volumes:
      - ./configuration-server:/configuration-server
    ports:
      - 8090:8090

  #  Petclinic
  config-server:
    image: inspectit/spring-petclinic-config-server:${INSPECTIT_PETCLINIC_VERSION}
    container_name: config-server
    hostname: config-server
    environment:
      - INSPECTIT_SERVICE_NAME=config-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9096
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://wfproxy:9411/api/v2/spans
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - agent
      - ocelot-config-server
      - wfproxy
    entrypoint: ["./dockerize", "java", "-javaagent:/agent/inspectit-ocelot-agent.jar", "org.springframework.boot.loader.JarLauncher"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8888:8888
      - 9096:9096

  discovery-server:
    image: inspectit/spring-petclinic-discovery-server:${INSPECTIT_PETCLINIC_VERSION}
    container_name: discovery-server
    hostname: discovery-server
    environment:
      - INSPECTIT_SERVICE_NAME=discovery-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9095
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://wfproxy:9411/api/v2/spans
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - wfproxy
      - config-server
    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=60s","--","java", "-javaagent:/agent/inspectit-ocelot-agent.jar", "org.springframework.boot.loader.JarLauncher"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8761:8761
      - 9095:9095

  customers-service:
    image: inspectit/spring-petclinic-customers-service:${INSPECTIT_PETCLINIC_VERSION}
    container_name: customers-service
    hostname: customers-service
    environment:
      - INSPECTIT_SERVICE_NAME=customers-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9091
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://wfproxy:9411/api/v2/spans
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - wfproxy
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-javaagent:/agent/inspectit-ocelot-agent.jar", "org.springframework.boot.loader.JarLauncher"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8081:8081
      - 9091:9091

  visits-service:
    image: inspectit/spring-petclinic-visits-service:${INSPECTIT_PETCLINIC_VERSION}
    container_name: visits-service
    hostname: visits-service
    environment:
      - INSPECTIT_SERVICE_NAME=visits-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9092
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://wfproxy:9411/api/v2/spans
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - wfproxy
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-javaagent:/agent/inspectit-ocelot-agent.jar", "org.springframework.boot.loader.JarLauncher"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8082:8082
      - 9092:9092

  vets-service:
    image: inspectit/spring-petclinic-vets-service:${INSPECTIT_PETCLINIC_VERSION}
    container_name: vets-service
    hostname: vets-service
    environment:
      - INSPECTIT_SERVICE_NAME=vets-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9093
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://wfproxy:9411/api/v2/spans
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - wfproxy
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-javaagent:/agent/inspectit-ocelot-agent.jar", "org.springframework.boot.loader.JarLauncher"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8083:8083
      - 9093:9093

  api-gateway:
    image: inspectit/spring-petclinic-api-gateway:${INSPECTIT_PETCLINIC_VERSION}
    container_name: api-gateway
    hostname: api-gateway
    environment:
      - INSPECTIT_SERVICE_NAME=api-gateway
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT=9094
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://wfproxy:9411/api/v2/spans
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - ocelot-config-server
      - agent
      - wfproxy
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-javaagent:/agent/inspectit-ocelot-agent.jar", "org.springframework.boot.loader.JarLauncher"]
    volumes:
      - agent-vol:/agent
    ports:
      - 8080:8080
      - 9094:9094

  #  Monitoring Backend

  #  Load Generator
  ## Artificial load on Demo
  load:
    image: inspectit/spring-petclinic-load:1.0
    container_name: load-generator
    hostname: load-generator

  #  Wavefront
  ## Time Series Database & Monitoring & Dashboarding
  wfproxy:
    image: wavefronthq/proxy:latest
    container_name: wfproxy
    environment:
      - WAVEFRONT_URL=${WAVEFRONT_URL}
      - WAVEFRONT_TOKEN=${WAVEFRONT_TOKEN}
      - "WAVEFRONT_PROXY_ARGS=--traceZipkinListenerPorts 9411"
    ports:
      - 2879:2878
      - 9411:9411

  #  Telegraf
  ## Monitoring Agent for Wavefront
  telegraf:
    image: telegraf:1.19.2
    container_name: telegraf
    depends_on:
      - wfproxy
    volumes:
      - ./telegraf/telegraf-wavefront.conf:/etc/telegraf/telegraf.conf:ro
    deploy:
      resources:
        limits:
          memory: 512M

volumes:
  agent-vol:
