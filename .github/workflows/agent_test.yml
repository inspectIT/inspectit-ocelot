name: Java Agent Tests

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'components/**'
      - 'inspectit-ocelot-documentation/**'
      - 'resources/**'
      - 'codequality/**'
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.circleci/**'

jobs:
  pr-check:
    name: 'Agent Tests (${{ matrix.dockerimage }})'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerimage:
          - 'openjdk:8-jdk'
          - 'openjdk:11-jdk'
          - 'openjdk:17-jdk'
          - 'ibmcom/ibmjava:8-sdk'
          - 'sgrio/java:jdk_8_ubuntu'
          - 'sgrio/java:jdk_11_ubuntu'
          - 'eclipse-temurin:8'
    container: ${{ matrix.dockerimage }}
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: assemble
        run: ./gradlew :inspectit-ocelot-core:assemble
      - name: test
        run: ./gradlew :inspectit-ocelot-core:test --no-daemon
      - name: systemTest
        run: ./gradlew :inspectit-ocelot-agent:systemTest
      - name: upload test results
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: 'test-results'
          path: |
            inspectit-ocelot-agent/build/test-results
            inspectit-ocelot-core/build/test-results
            inspectit-ocelot-core/build/reports
            inspectit-ocelot-config/build/test-results

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    container: openjdk:8-jdk
    needs: [ pr-check ]
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run code coverage
        run: ./gradlew codeCoverageReport
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          name: codecov-ocelot-agent
          files: ./build/reports/jacoco/report.xml
          flags: unittests
          verbose: true

  jmh-compile:
    name: 'Compile JMH Tests'
    runs-on: ubuntu-latest
    container: openjdk:8-jdk
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: jmhCompile
        run: ./gradlew jmhCompile

  attach-alpine-jdk8:
    name: 'Runtime Attachment'
    runs-on: ubuntu-latest
    container: openjdk:8-jdk-alpine
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: assemble
        run: ./gradlew assemble
      - name: attach
        run: |
          apk update && apk add curl
          echo "class Dummy{public static void main(String[] args)throws InterruptedException{while (true){Thread.sleep(1000);}}}" > Dummy.java
          javac Dummy.java
          $(nohup java Dummy > out.txt &)
          processId=$( ps -e -o pid,comm,args | grep 'java Dummy' | awk '{ if ($2=="java") print $1 }' )
          pwd
          java -jar inspectit-ocelot-agent/build/inspectit-ocelot-agent-SNAPSHOT.jar $processId '{"inspectit.exporters.metrics.prometheus.enabled":"ENABLED"}'
          curl -4 -o /dev/null -s -w "%{http_code}" --connect-timeout 2 --max-time 2  --retry 3 --retry-delay 3 --retry-max-time 10 --retry-connrefuse http://localhost:8888
