name: Configuration Server Tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'inspectit-ocelot-documentation/**'
      - 'resources/**'
      - 'codequality/**'
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.circleci/**'
  pull_request:
    paths-ignore:
      - 'inspectit-ocelot-documentation/**'
      - 'resources/**'
      - 'codequality/**'
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.circleci/**'
  workflow_call:
  workflow_dispatch:

jobs:
  test:
    name: Assemble & Test
    runs-on: ubuntu-latest
    env:
      working-directory: ./components/inspectit-ocelot-configurationserver
    container: eclipse-temurin:17
    steps:
      - uses: actions/checkout@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: assemble
        run: ../../gradlew assemble
        working-directory: ${{env.working-directory}}
      - name: Build jar with frontend
        working-directory: ${{env.working-directory}}
        run: ../../gradlew bootJarWithFrontend
      - name: test
        run: ../../gradlew test
        working-directory: ${{env.working-directory}}
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: configuration-server
          path: ./components/inspectit-ocelot-configurationserver/build/libs/*.jar

  dependency-scan:
    name: Dependency Scan
    runs-on: ubuntu-latest
    container: eclipse-temurin:17
    steps:
      - uses: actions/checkout@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: build Configuration-Server
        run: ./gradlew :inspectit-ocelot-configurationserver:bootJarWithFrontend
      - name: Run DependencyCheck
        uses: dependency-check/Dependency-Check_Action@main
        id: depcheck
        continue-on-error: true
        with:
          project: inspectIT/inspectit-ocelot-configuration-server
          path: 'components/inspectit-ocelot-configurationserver'
          format: 'HTML'
          out: 'reports/configuration-server'
          args: >
            --disableAssembly
            --disableNodeAudit
            --nvdApiKey ${{ secrets.NVD_API_KEY }}
            --nvdApiDelay 10000
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report-ocelot-configurationserver
          path: ${{ github.workspace }}/reports
      # if DependencyCheck failed, the job should also fail, but only after the results were uploaded
      - name: Validate DependencyCheck outcome
        if: ${{ steps.depcheck.outcome == 'failure' }}
        run: |
          echo "DependencyCheck failed"
          exit 1
