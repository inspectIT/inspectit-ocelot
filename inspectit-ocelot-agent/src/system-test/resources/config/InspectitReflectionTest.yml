inspectit:
  metrics:
    definitions:
      reflectionInvokedMethod:
        unit: invocations
        views:
          reflectionInvokedMethod:
            aggregation: COUNT
            tags:
              field: true

  instrumentation:
    scopes:
      InspectitReflectionTest-instrumentedMethod:
        type: { name: InspectitReflectionTest, matcher-mode: ENDS_WITH}
        methods: [{name: instrumentedMethod}]


    actions:
      InspectitReflectionTest-getFieldValue:
        input:
          _class: Class
          _this: Object
          _reflection: InspectitReflection
        value: _reflection.getFieldValue(_class, _this, "hiddenField")

      InspectitReflectionTest-invokeMethod:
        input:
          _class: Class
          _this: Object
          _reflection: InspectitReflection
        value: _reflection.invokeMethod(_class, _this, "hiddenMethod", null)

    rules:
      InspectitReflectionTest:
        scopes: { InspectitReflectionTest-instrumentedMethod: true }
        entry:
          fieldValue:
            action: InspectitReflectionTest-getFieldValue
          invokedMethodResult:
            action: InspectitReflectionTest-invokeMethod
        metrics:
          reflectionInvokedMethod:
            value: invokedMethodResult
            data-tags:
              field: fieldValue
