import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'maven-publish'
    alias(libs.plugins.orgSpringframeworkBoot) apply false
    alias(libs.plugins.ioSpringDependencyManagement)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}

dependencies {
    compileOnly libs.orgProjectlombokLombok
    annotationProcessor libs.orgProjectlombokLombok
    testImplementation (
            libs.orgJunitJupiterJunitJupiterApi,
            libs.orgMockitoMockitoJunitJupiter
    )
    testRuntimeOnly libs.orgJunitJupiterJunitJupiterEngine
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

group = 'rocks.inspectit.ocelot'

java {
    sourceCompatibility = 1.8 // Java version compatibility to use when compiling Java source
    targetCompatibility = 1.8 // Java version to generate classes for
}

jar {
    archiveFileName = "${project.name}.jar"

    //include all "implementation" dependencies in fat jar
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
